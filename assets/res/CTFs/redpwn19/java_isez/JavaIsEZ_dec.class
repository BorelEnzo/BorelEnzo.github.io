//
// Decompiled by Procyon v0.5.36
//

public class JavaIsEZ
{
    public static void main(final String[] p0) {
        //
        // This method could not be decompiled.
        //
        // Original Bytecode:
        //
        //     3: ldc             "noob"
        //     5: jsr             104
        //     8: return
        //     9: pop
        //    10: ldc             "You got it right :P"
        //    12: jsr             104
        //    15: return
        //    16: astore          11
        //    18: aload           8
        //    20: swap
        //    21: iload           7
        //    23: swap
        //    24: iastore
        //    25: iinc            7, 1
        //    28: ret             11
        //    30: astore_1
        //    31: iconst_0
        //    32: istore          7
        //    34: bipush          8
        //    36: newarray        I
        //    38: astore          8
        //    40: bipush          97
        //    42: jsr             16
        //    45: bipush          71
        //    47: jsr             16
        //    50: bipush          94
        //    52: jsr             16
        //    55: bipush          89
        //    57: jsr             16
        //    60: bipush          90
        //    62: jsr             16
        //    65: bipush          121
        //    67: jsr             16
        //    70: bipush          72
        //    72: jsr             16
        //    75: bipush          53
        //    77: jsr             16
        //    80: ret             1
        //    82: astore_1
        //    83: iconst_0
        //    84: istore          5
        //    86: iload           5
        //    88: iload_2
        //    89: isub
        //    90: ifne            95
        //    93: ret             1
        //    95: iinc            5, 1
        //    98: aload           4
        //   100: monitorenter
        //   101: goto            86
        //   104: pop
        //   105: getstatic       java/lang/System.out:Ljava/io/PrintStream;
        //   108: swap
        //   109: invokevirtual   java/io/PrintStream.println:(Ljava/lang/Object;)V
        //   112: return
        //   113: aconst_null
        //   114: checkcast       LredpwnCTF_says_stop_using_ur_decompiler;
        //   117: ldc             "java.utils.ArrayList"
        //   119: invokestatic    java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
        //   122: invokestatic    java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
        //   125: iconst_1
        //   126: ldc             65535
        //   128: invokevirtual   java/util/concurrent/ThreadLocalRandom.nextInt:(II)I
        //   131: putstatic       JavaIsEZ.a:I
        //   134: pop2
        //   135: aconst_null
        //   136: goto            151
        //   139: aload_0
        //   140: aconst_null
        //   141: astore_0
        //   142: monitorexit
        //   143: goto            113
        //   146: aconst_null
        //   147: athrow
        //   148: goto            113
        //   151: getstatic       JavaIsEZ.a:I
        //   154: istore          13
        //   156: iconst_0
        //   157: istore_2
        //   158: iconst_0
        //   159: istore_3
        //   160: ifnull          113
        //   163: iload           13
        //   165: lookupswitch {
        //             -555: 3
        //                1: 10
        //             4882: 0
        //          default: 200
        //        }
        //   200: aload_0
        //   201: arraylength
        //   202: iconst_1
        //   203: isub
        //   204: ifge            212
        //   207: ldc             "You need to specify the flag..."
        //   209: jsr             104
        //   212: aload_0
        //   213: iconst_0
        //   214: aaload
        //   215: astore_3
        //   216: aload_3
        //   217: invokevirtual   java/lang/String.length:()I
        //   220: bipush          42
        //   222: isub
        //   223: ifeq            232
        //   226: ldc             "noob"
        //   228: jsr             104
        //   231: return
        //   232: aload_3
        //   233: invokevirtual   java/lang/String.toCharArray:()[C
        //   236: astore          4
        //   238: aload           4
        //   240: arraylength
        //   241: istore_2
        //   242: new             Ljava/lang/Object;
        //   245: dup
        //   246: invokespecial   java/lang/Object.<init>:()V
        //   249: astore          6
        //   251: jsr             82
        //   254: jsr             30
        //   257: iconst_0
        //   258: istore          9
        //   260: new             Ljava/lang/StringBuilder;
        //   263: dup
        //   264: invokespecial   java/lang/StringBuilder.<init>:()V
        //   267: astore          12
        //   269: aconst_null
        //   270: iload           9
        //   272: ifeq            295
        //   275: pop
        //   276: aload           12
        //   278: invokevirtual   java/lang/StringBuilder.toString:()Ljava/lang/String;
        //   281: ldc             "\u0007+?>!\u0013|CU\u0018o*\u0005M;j\ts,=\u0005M;\u0018\u000fs*h,J\u0017F0s?8\u0012#{Z\u0007:"
        //   283: invokevirtual   java/lang/String.equals:(Ljava/lang/Object;)Z
        //   286: ifne            292
        //   289: goto            3
        //   292: jsr             9
        //   295: pop
        //   296: invokestatic    java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
        //   299: iconst_1
        //   300: ldc             65535
        //   302: invokevirtual   java/util/concurrent/ThreadLocalRandom.nextInt:(II)I
        //   305: istore          9
        //   307: iconst_0
        //   308: istore          10
        //   310: aload           4
        //   312: monitorexit
        //   313: aload           12
        //   315: aload           4
        //   317: iload           10
        //   319: caload
        //   320: aload           8
        //   322: dup
        //   323: iload           10
        //   325: swap
        //   326: arraylength
        //   327: irem
        //   328: iaload
        //   329: ixor
        //   330: i2c
        //   331: invokevirtual   java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        //   334: pop
        //   335: iinc            10, 1
        //   338: iconst_0
        //   339: istore          9
        //   341: iload           13
        //   343: ifne            113
        //   346: goto            310
        //   349: return
        //    Exceptions:
        //  Try           Handler
        //  Start  End    Start  End    Type
        //  -----  -----  -----  -----  ----------------------------------------
        //  113    139    151    270    Any
        //  139    143    151    270    Any
        //  146    148    151    270    Any
        //  270    349    270    275    Ljava/lang/IllegalMonitorStateException;
        //
        // The error that occurred was:
        //
        // java.lang.IllegalStateException: Inconsistent stack size at #0495 (coming from #0492).
        //     at com.strobel.decompiler.ast.AstBuilder.performStackAnalysis(AstBuilder.java:2183)
        //     at com.strobel.decompiler.ast.AstBuilder.build(AstBuilder.java:108)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:211)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:782)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:675)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:552)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:519)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:161)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:150)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:125)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:330)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:144)
        //
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
}
