package com.sun.mail.smtp;

import java.io.InputStream;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.internet.MimeMessage;

public class SMTPMessage
  extends MimeMessage
{
  public static final int NOTIFY_DELAY = 4;
  public static final int NOTIFY_FAILURE = 2;
  public static final int NOTIFY_NEVER = -1;
  public static final int NOTIFY_SUCCESS = 1;
  public static final int RETURN_FULL = 1;
  public static final int RETURN_HDRS = 2;
  private static final String[] returnOptionString;
  private boolean allow8bitMIME = false;
  private String envelopeFrom;
  private String extension = null;
  private int notifyOptions = 0;
  private int returnOption = 0;
  private boolean sendPartial = false;
  private String submitter = null;
  
  static
  {
    String[] arrayOfString = new String[3];
    arrayOfString[1] = "FULL";
    arrayOfString[2] = "HDRS";
    returnOptionString = arrayOfString;
  }
  
  public SMTPMessage(Session paramSession)
  {
    super(paramSession);
  }
  
  public SMTPMessage(Session paramSession, InputStream paramInputStream)
    throws MessagingException
  {
    super(paramSession, paramInputStream);
  }
  
  public SMTPMessage(MimeMessage paramMimeMessage)
    throws MessagingException
  {
    super(paramMimeMessage);
  }
  
  public boolean getAllow8bitMIME()
  {
    return this.allow8bitMIME;
  }
  
  String getDSNNotify()
  {
    if (this.notifyOptions == 0) {
      return null;
    }
    if (this.notifyOptions == -1) {
      return "NEVER";
    }
    StringBuffer localStringBuffer = new StringBuffer();
    if ((this.notifyOptions & 0x1) != 0) {
      localStringBuffer.append("SUCCESS");
    }
    if ((this.notifyOptions & 0x2) != 0)
    {
      if (localStringBuffer.length() != 0) {
        localStringBuffer.append(',');
      }
      localStringBuffer.append("FAILURE");
    }
    if ((this.notifyOptions & 0x4) != 0)
    {
      if (localStringBuffer.length() != 0) {
        localStringBuffer.append(',');
      }
      localStringBuffer.append("DELAY");
    }
    return localStringBuffer.toString();
  }
  
  String getDSNRet()
  {
    return returnOptionString[this.returnOption];
  }
  
  public String getEnvelopeFrom()
  {
    return this.envelopeFrom;
  }
  
  public String getMailExtension()
  {
    return this.extension;
  }
  
  public int getNotifyOptions()
  {
    return this.notifyOptions;
  }
  
  public int getReturnOption()
  {
    return this.returnOption;
  }
  
  public boolean getSendPartial()
  {
    return this.sendPartial;
  }
  
  public String getSubmitter()
  {
    return this.submitter;
  }
  
  public void setAllow8bitMIME(boolean paramBoolean)
  {
    this.allow8bitMIME = paramBoolean;
  }
  
  public void setEnvelopeFrom(String paramString)
  {
    this.envelopeFrom = paramString;
  }
  
  public void setMailExtension(String paramString)
  {
    this.extension = paramString;
  }
  
  public void setNotifyOptions(int paramInt)
  {
    if ((paramInt < -1) || (paramInt >= 8)) {
      throw new IllegalArgumentException("Bad return option");
    }
    this.notifyOptions = paramInt;
  }
  
  public void setReturnOption(int paramInt)
  {
    if ((paramInt < 0) || (paramInt > 2)) {
      throw new IllegalArgumentException("Bad return option");
    }
    this.returnOption = paramInt;
  }
  
  public void setSendPartial(boolean paramBoolean)
  {
    this.sendPartial = paramBoolean;
  }
  
  public void setSubmitter(String paramString)
  {
    this.submitter = paramString;
  }
}


/* Location:              /home/enzo/Documents/BorelEnzo.github.io/malwares/dsencrypt/classes.jar!/com/sun/mail/smtp/SMTPMessage.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */