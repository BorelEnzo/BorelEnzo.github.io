package org.apache.harmony.awt.internal.nls;

import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;

public class Messages
{
  private static ResourceBundle bundle = null;
  
  static
  {
    try
    {
      bundle = setLocale(Locale.getDefault(), "org.apache.harmony.awt.internal.nls.messages");
      return;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
    }
  }
  
  public static String format(String paramString, Object[] paramArrayOfObject)
  {
    StringBuilder localStringBuilder = new StringBuilder(paramString.length() + paramArrayOfObject.length * 20);
    String[] arrayOfString = new String[paramArrayOfObject.length];
    int i = 0;
    int j;
    if (i >= paramArrayOfObject.length)
    {
      i = 0;
      j = paramString.indexOf('{', 0);
      if (j < 0)
      {
        if (i < paramString.length()) {
          localStringBuilder.append(paramString.substring(i, paramString.length()));
        }
        return localStringBuilder.toString();
      }
    }
    else
    {
      if (paramArrayOfObject[i] == null) {
        arrayOfString[i] = "<null>";
      }
      for (;;)
      {
        i += 1;
        break;
        arrayOfString[i] = paramArrayOfObject[i].toString();
      }
    }
    if ((j != 0) && (paramString.charAt(j - 1) == '\\'))
    {
      if (j != 1) {
        localStringBuilder.append(paramString.substring(i, j - 1));
      }
      localStringBuilder.append('{');
      i = j + 1;
    }
    int k;
    for (;;)
    {
      j = paramString.indexOf('{', i);
      break;
      if (j > paramString.length() - 3)
      {
        localStringBuilder.append(paramString.substring(i, paramString.length()));
        i = paramString.length();
      }
      else
      {
        k = (byte)Character.digit(paramString.charAt(j + 1), 10);
        if ((k >= 0) && (paramString.charAt(j + 2) == '}')) {
          break label253;
        }
        localStringBuilder.append(paramString.substring(i, j + 1));
        i = j + 1;
      }
    }
    label253:
    localStringBuilder.append(paramString.substring(i, j));
    if (k >= arrayOfString.length) {
      localStringBuilder.append("<missing argument>");
    }
    for (;;)
    {
      i = j + 3;
      break;
      localStringBuilder.append(arrayOfString[k]);
    }
  }
  
  public static String getString(String paramString)
  {
    if (bundle == null) {
      return paramString;
    }
    try
    {
      String str = bundle.getString(paramString);
      return str;
    }
    catch (MissingResourceException localMissingResourceException) {}
    return "Missing message: " + paramString;
  }
  
  public static String getString(String paramString, char paramChar)
  {
    return getString(paramString, new Object[] { String.valueOf(paramChar) });
  }
  
  public static String getString(String paramString, int paramInt)
  {
    return getString(paramString, new Object[] { Integer.toString(paramInt) });
  }
  
  public static String getString(String paramString, Object paramObject)
  {
    return getString(paramString, new Object[] { paramObject });
  }
  
  public static String getString(String paramString, Object paramObject1, Object paramObject2)
  {
    return getString(paramString, new Object[] { paramObject1, paramObject2 });
  }
  
  public static String getString(String paramString, Object[] paramArrayOfObject)
  {
    String str1 = paramString;
    String str2 = str1;
    if (bundle != null) {}
    try
    {
      str2 = bundle.getString(paramString);
      return format(str2, paramArrayOfObject);
    }
    catch (MissingResourceException paramString)
    {
      for (;;)
      {
        str2 = str1;
      }
    }
  }
  
  public static ResourceBundle setLocale(final Locale paramLocale, String paramString)
  {
    try
    {
      paramLocale = (ResourceBundle)AccessController.doPrivileged(new PrivilegedAction()
      {
        public Object run()
        {
          String str = Messages.this;
          Locale localLocale = paramLocale;
          if (this.val$loader != null) {}
          for (ClassLoader localClassLoader = this.val$loader;; localClassLoader = ClassLoader.getSystemClassLoader()) {
            return ResourceBundle.getBundle(str, localLocale, localClassLoader);
          }
        }
      });
      return paramLocale;
    }
    catch (MissingResourceException paramLocale) {}
    return null;
  }
}


/* Location:              /home/enzo/Documents/BorelEnzo.github.io/malwares/dsencrypt/classes.jar!/org/apache/harmony/awt/internal/nls/Messages.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */